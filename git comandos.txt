
git version //La version instalada de GIT
git config --global user.name "mi nombre"//Establece el nombre de usuario en GIT
git config --global user.email "myemail@example.com"// Establece el mail en GIT
git init //Inicializa git en el directorio donde estoy
git status -s //muestra el listado de archivos controlados
git add index.html //Agrega el archivo al area de staging (temporal)
git commit -m //pasa el archivo al area temporal -m es para poner un mensaje
git add .// Agrega todos los archivos al repositorio
git log --oneline // Muestra en una línea los commit realizados


usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]    
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]       
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
PS C:\Users\GerTic\Documents\fundamentosNodeJS\http> 

TRADUCIDO AL ESPAÑOL
Lo que hace git basicamente es tomar una fotografía del c´ódigo, esto nos ayuda en el futuro a volver al codigo base.

uso: git [--version] [--help] [-C <ruta>] [-c <nombre>=<valor>]
           [--ruta-exec[=<ruta>]] [--ruta-html] [--ruta-man] [--ruta-info]
           [-p | --paginar | -P | --no-pager] [--no-reemplazar-objetos] [--bare]
           [--git-dir=<ruta>] [--work-tree=<ruta>] [--namespace=<nombre>]
           [--super-prefix=<ruta>] [--config-env=<nombre>=<envvar>]
           <comando> [<argumentos>]

Estos son comandos comunes de Git que se usan en varias situaciones:

iniciar un área de trabajo (ver también: tutorial de ayuda de git)
   clone 	Clonar un repositorio en un nuevo directorio
   init 	Crea un repositorio Git vacío o reinicializa uno existente

trabajar en el cambio actual (ver también: ayuda de git todos los días)
   add 		Agregar contenido de archivo al índice (al area temporal para comenzar a darle seguimiento a los archivos ej: git add index.html si ponemos (git add .)toma todos los archivos y los manda al area temporal )
   mv		Mover o cambiar el nombre de un archivo, un directorio o un enlace simbólico
   restore 	Restaurar archivos de árbol de trabajo
   rm 		Eliminar archivos del árbol de trabajo y del índice

examinar el historial y el estado (ver también: revisiones de ayuda de git)
   bisect 	Utilice la búsqueda binaria para encontrar la confirmación que introdujo un error
   diff		Muestra cambios entre compromisos, compromiso y árbol de trabajo, etc.
   grep 	Imprime líneas que coinciden con un patrón
   log		Mostrar registros de confirmación(revisa todos los comit y envia el codigo de cada uno)
   show 	Mostrar varios tipos de objetos
   status 	Mostrar el estado del árbol de trabajo (git status -s)

crecer, marcar y modificar su historia común
   branch	Enumerar, crear o eliminar sucursales
   commit 	Registrar cambios en el repositorio (fotografia del proyecto en ese monmento)
   merge	Unir dos o más historias de desarrollo juntas
   rebase 	Reapply confirma sobre otro consejo base
   reset	Restablecer HEAD actual al estado especificado
   switch	Cambiar de rama
   tag		Crear, enumerar, eliminar o verificar un objeto de etiqueta firmado con GPG

colaborar (ver también: flujos de trabajo de ayuda de git)
   fetch	Descargar objetos y referencias de otro repositorio
   pull		Fetch e integre con otro repositorio o una sucursal local
   push		Actualizar referencias remotas junto con objetos asociados

'git help -a' y 'git help -g' enumeran los subcomandos disponibles y algunos
guías conceptuales. Consulte 'git help <comando>' o 'git help <concepto>'
para leer sobre un subcomando o concepto específico.
Consulte 'git help git' para obtener una descripción general del sistema.
PD C:\Usuarios\GerTic\Documentos\fundamentosNodeJS\http>